<?xml version="1.0" encoding="utf-8"?>
<ArrayOfClassModel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ClassModel ClassName="SchoolDAC" IsUpdated="false" GenerateXmlComments="true" UseDefaultComments="true" XmlComment="Schools data access component. Manages CRUD operations for the Schools table." ProductName="SBiSchoolWeb.Data" Body="&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Inserts a new row in the Schools table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;school&quot;&gt;A School object.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;An updated School object.&lt;/returns&gt;&#xD;&#xA;		public School Create(School school)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;INSERT INTO dbo.Schools ([SchoolIndex], [SchoolName], [SchoolType], [GradingSystem], [DefaultSchool], [GLCustomerId], [Cellphone], [Telephone], [Email], [Address1], [Address2], [SMTPServer], [SMSGateway], [Status], [Logo], [Slogan], [IsDeleted]) &quot; +&#xD;&#xA;				&quot;VALUES(@SchoolIndex, @SchoolName, @SchoolType, @GradingSystem, @DefaultSchool, @GLCustomerId, @Cellphone, @Telephone, @Email, @Address1, @Address2, @SMTPServer, @SMSGateway, @Status, @Logo, @Slogan, @IsDeleted); SELECT SCOPE_IDENTITY();&quot; ; &#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SchoolIndex&quot;, DbType.String, school.SchoolIndex);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SchoolName&quot;, DbType.String, school.SchoolName);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SchoolType&quot;, DbType.String, school.SchoolType);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@GradingSystem&quot;, DbType.Int32, school.GradingSystem);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@DefaultSchool&quot;, DbType.Boolean, school.DefaultSchool);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@GLCustomerId&quot;, DbType.Int32, school.GLCustomerId);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Cellphone&quot;, DbType.String, school.Cellphone);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Telephone&quot;, DbType.String, school.Telephone);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Email&quot;, DbType.String, school.Email);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address1&quot;, DbType.String, school.Address1);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address2&quot;, DbType.String, school.Address2);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SMTPServer&quot;, DbType.String, school.SMTPServer);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SMSGateway&quot;, DbType.String, school.SMSGateway);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Status&quot;, DbType.String, school.Status);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Logo&quot;, DbType.String, school.Logo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Slogan&quot;, DbType.String, school.Slogan);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, school.IsDeleted);&#xD;&#xA;&#xD;&#xA;				// Get the primary key value.&#xD;&#xA;				school.Id = Convert.ToInt32(db.ExecuteScalar(cmd));&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return school;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Updates an existing row in the Schools table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;school&quot;&gt;A School entity object.&lt;/param&gt;&#xD;&#xA;		public void UpdateById(School school)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;UPDATE dbo.Schools &quot; +&#xD;&#xA;				&quot;SET &quot; +&#xD;&#xA;					&quot;[SchoolIndex]=@SchoolIndex, &quot; +&#xD;&#xA;					&quot;[SchoolName]=@SchoolName, &quot; +&#xD;&#xA;					&quot;[SchoolType]=@SchoolType, &quot; +&#xD;&#xA;					&quot;[GradingSystem]=@GradingSystem, &quot; +&#xD;&#xA;					&quot;[DefaultSchool]=@DefaultSchool, &quot; +&#xD;&#xA;					&quot;[GLCustomerId]=@GLCustomerId, &quot; +&#xD;&#xA;					&quot;[Cellphone]=@Cellphone, &quot; +&#xD;&#xA;					&quot;[Telephone]=@Telephone, &quot; +&#xD;&#xA;					&quot;[Email]=@Email, &quot; +&#xD;&#xA;					&quot;[Address1]=@Address1, &quot; +&#xD;&#xA;					&quot;[Address2]=@Address2, &quot; +&#xD;&#xA;					&quot;[SMTPServer]=@SMTPServer, &quot; +&#xD;&#xA;					&quot;[SMSGateway]=@SMSGateway, &quot; +&#xD;&#xA;					&quot;[Status]=@Status, &quot; +&#xD;&#xA;					&quot;[Logo]=@Logo, &quot; +&#xD;&#xA;					&quot;[Slogan]=@Slogan, &quot; +&#xD;&#xA;					&quot;[IsDeleted]=@IsDeleted &quot; +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SchoolIndex&quot;, DbType.String, school.SchoolIndex);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SchoolName&quot;, DbType.String, school.SchoolName);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SchoolType&quot;, DbType.String, school.SchoolType);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@GradingSystem&quot;, DbType.Int32, school.GradingSystem);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@DefaultSchool&quot;, DbType.Boolean, school.DefaultSchool);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@GLCustomerId&quot;, DbType.Int32, school.GLCustomerId);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Cellphone&quot;, DbType.String, school.Cellphone);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Telephone&quot;, DbType.String, school.Telephone);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Email&quot;, DbType.String, school.Email);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address1&quot;, DbType.String, school.Address1);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Address2&quot;, DbType.String, school.Address2);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SMTPServer&quot;, DbType.String, school.SMTPServer);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@SMSGateway&quot;, DbType.String, school.SMSGateway);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Status&quot;, DbType.String, school.Status);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Logo&quot;, DbType.String, school.Logo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Slogan&quot;, DbType.String, school.Slogan);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, school.IsDeleted);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, school.Id);&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally deletes one or more rows in the Schools table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		public void DeleteById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &quot;DELETE dbo.Schools &quot; +&#xD;&#xA;										 &quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Returns a row from the Schools table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A Id value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A School object with data populated from the database.&lt;/returns&gt;&#xD;&#xA;		public School SelectById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [SchoolIndex], [SchoolName], [SchoolType], [GradingSystem], [DefaultSchool]&quot;+&#xD;&#xA;						&quot;, [GLCustomerId], [Cellphone], [Telephone], [Email], [Address1], [Address2], [SMTPServer]&quot;+&#xD;&#xA;						&quot;, [SMSGateway], [Status], [Logo], [Slogan], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.Schools  &quot;  +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			School school = null;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					if (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new School&#xD;&#xA;						school = new School();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						school.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						school.SchoolIndex = base.GetDataValue&lt;string&gt;(dr, &quot;SchoolIndex&quot;);&#xD;&#xA;						school.SchoolName = base.GetDataValue&lt;string&gt;(dr, &quot;SchoolName&quot;);&#xD;&#xA;						school.SchoolType = base.GetDataValue&lt;string&gt;(dr, &quot;SchoolType&quot;);&#xD;&#xA;						school.GradingSystem = base.GetDataValue&lt;int&gt;(dr, &quot;GradingSystem&quot;);&#xD;&#xA;						school.DefaultSchool = base.GetDataValue&lt;bool&gt;(dr, &quot;DefaultSchool&quot;);&#xD;&#xA;						school.GLCustomerId = base.GetDataValue&lt;int&gt;(dr, &quot;GLCustomerId&quot;);&#xD;&#xA;						school.Cellphone = base.GetDataValue&lt;string&gt;(dr, &quot;Cellphone&quot;);&#xD;&#xA;						school.Telephone = base.GetDataValue&lt;string&gt;(dr, &quot;Telephone&quot;);&#xD;&#xA;						school.Email = base.GetDataValue&lt;string&gt;(dr, &quot;Email&quot;);&#xD;&#xA;						school.Address1 = base.GetDataValue&lt;string&gt;(dr, &quot;Address1&quot;);&#xD;&#xA;						school.Address2 = base.GetDataValue&lt;string&gt;(dr, &quot;Address2&quot;);&#xD;&#xA;						school.SMTPServer = base.GetDataValue&lt;string&gt;(dr, &quot;SMTPServer&quot;);&#xD;&#xA;						school.SMSGateway = base.GetDataValue&lt;string&gt;(dr, &quot;SMSGateway&quot;);&#xD;&#xA;						school.Status = base.GetDataValue&lt;string&gt;(dr, &quot;Status&quot;);&#xD;&#xA;						school.Logo = base.GetDataValue&lt;string&gt;(dr, &quot;Logo&quot;);&#xD;&#xA;						school.Slogan = base.GetDataValue&lt;string&gt;(dr, &quot;Slogan&quot;);&#xD;&#xA;						school.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return school;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally retrieves one or more rows from the Schools table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;returns&gt;A collection of School objects.&lt;/returns&gt;		&#xD;&#xA;		public List&lt;School&gt; Select()&#xD;&#xA;		{&#xD;&#xA;			// WARNING! The following SQL query does not contain a WHERE condition.&#xD;&#xA;			// You are advised to include a WHERE condition to prevent any performance&#xD;&#xA;			// issues when querying large resultsets.&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [SchoolIndex], [SchoolName], [SchoolType], [GradingSystem], [DefaultSchool]&quot;+&#xD;&#xA;						&quot;, [GLCustomerId], [Cellphone], [Telephone], [Email], [Address1], [Address2], [SMTPServer]&quot;+&#xD;&#xA;						&quot;, [SMSGateway], [Status], [Logo], [Slogan], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.Schools &quot;;&#xD;&#xA;&#xD;&#xA;			List&lt;School&gt; result = new List&lt;School&gt;();&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{ &#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					while (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new School&#xD;&#xA;						School school = new School();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						school.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						school.SchoolIndex = base.GetDataValue&lt;string&gt;(dr, &quot;SchoolIndex&quot;);&#xD;&#xA;						school.SchoolName = base.GetDataValue&lt;string&gt;(dr, &quot;SchoolName&quot;);&#xD;&#xA;						school.SchoolType = base.GetDataValue&lt;string&gt;(dr, &quot;SchoolType&quot;);&#xD;&#xA;						school.GradingSystem = base.GetDataValue&lt;int&gt;(dr, &quot;GradingSystem&quot;);&#xD;&#xA;						school.DefaultSchool = base.GetDataValue&lt;bool&gt;(dr, &quot;DefaultSchool&quot;);&#xD;&#xA;						school.GLCustomerId = base.GetDataValue&lt;int&gt;(dr, &quot;GLCustomerId&quot;);&#xD;&#xA;						school.Cellphone = base.GetDataValue&lt;string&gt;(dr, &quot;Cellphone&quot;);&#xD;&#xA;						school.Telephone = base.GetDataValue&lt;string&gt;(dr, &quot;Telephone&quot;);&#xD;&#xA;						school.Email = base.GetDataValue&lt;string&gt;(dr, &quot;Email&quot;);&#xD;&#xA;						school.Address1 = base.GetDataValue&lt;string&gt;(dr, &quot;Address1&quot;);&#xD;&#xA;						school.Address2 = base.GetDataValue&lt;string&gt;(dr, &quot;Address2&quot;);&#xD;&#xA;						school.SMTPServer = base.GetDataValue&lt;string&gt;(dr, &quot;SMTPServer&quot;);&#xD;&#xA;						school.SMSGateway = base.GetDataValue&lt;string&gt;(dr, &quot;SMSGateway&quot;);&#xD;&#xA;						school.Status = base.GetDataValue&lt;string&gt;(dr, &quot;Status&quot;);&#xD;&#xA;						school.Logo = base.GetDataValue&lt;string&gt;(dr, &quot;Logo&quot;);&#xD;&#xA;						school.Slogan = base.GetDataValue&lt;string&gt;(dr, &quot;Slogan&quot;);&#xD;&#xA;						school.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;&#xD;&#xA;						// Add to List.&#xD;&#xA;						result.Add(school);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return result;&#xD;&#xA;		}&#xD;&#xA;">
    <NamespacesToImport />
    <Methods>
      <MethodModel Name="Create" EntityName="School" TableName="Schools" SchemaName="dbo" TableAlias="A" Type="Insert" IsUpdated="false" XmlComment="Inserts a new row in the Schools table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolIndex" TableName="Schools" PropertyName="SchoolIndex" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolName" TableName="Schools" PropertyName="SchoolName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolType" TableName="Schools" PropertyName="SchoolType" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GradingSystem" TableName="Schools" PropertyName="GradingSystem" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DefaultSchool" TableName="Schools" PropertyName="DefaultSchool" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GLCustomerId" TableName="Schools" PropertyName="GLCustomerId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Cellphone" TableName="Schools" PropertyName="Cellphone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Schools" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Schools" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Schools" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Schools" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMTPServer" TableName="Schools" PropertyName="SMTPServer" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMSGateway" TableName="Schools" PropertyName="SMSGateway" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Schools" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Schools" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Schools" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Schools" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="UpdateById" EntityName="School" TableName="Schools" SchemaName="dbo" TableAlias="A" Type="UpdateObject" IsUpdated="false" XmlComment="Updates an existing row in the Schools table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolIndex" TableName="Schools" PropertyName="SchoolIndex" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolName" TableName="Schools" PropertyName="SchoolName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolType" TableName="Schools" PropertyName="SchoolType" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GradingSystem" TableName="Schools" PropertyName="GradingSystem" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DefaultSchool" TableName="Schools" PropertyName="DefaultSchool" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GLCustomerId" TableName="Schools" PropertyName="GLCustomerId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Cellphone" TableName="Schools" PropertyName="Cellphone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Schools" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Schools" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Schools" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Schools" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMTPServer" TableName="Schools" PropertyName="SMTPServer" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMSGateway" TableName="Schools" PropertyName="SMSGateway" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Schools" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Schools" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Schools" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Schools" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="DeleteById" EntityName="School" TableName="Schools" SchemaName="dbo" TableAlias="A" Type="Delete" IsUpdated="false" XmlComment="Conditionally deletes one or more rows in the Schools table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns />
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectById" EntityName="School" TableName="Schools" SchemaName="dbo" TableAlias="A" Type="SelectObject" IsUpdated="false" XmlComment="Returns a row from the Schools table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolIndex" TableName="Schools" PropertyName="SchoolIndex" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolName" TableName="Schools" PropertyName="SchoolName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolType" TableName="Schools" PropertyName="SchoolType" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GradingSystem" TableName="Schools" PropertyName="GradingSystem" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DefaultSchool" TableName="Schools" PropertyName="DefaultSchool" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GLCustomerId" TableName="Schools" PropertyName="GLCustomerId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Cellphone" TableName="Schools" PropertyName="Cellphone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Schools" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Schools" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Schools" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Schools" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMTPServer" TableName="Schools" PropertyName="SMTPServer" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMSGateway" TableName="Schools" PropertyName="SMSGateway" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Schools" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Schools" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Schools" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Schools" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="Select" EntityName="School" TableName="Schools" SchemaName="dbo" TableAlias="A" Type="Select" IsUpdated="false" XmlComment="Conditionally retrieves one or more rows from the Schools table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Schools" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolIndex" TableName="Schools" PropertyName="SchoolIndex" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolName" TableName="Schools" PropertyName="SchoolName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SchoolType" TableName="Schools" PropertyName="SchoolType" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GradingSystem" TableName="Schools" PropertyName="GradingSystem" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DefaultSchool" TableName="Schools" PropertyName="DefaultSchool" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="GLCustomerId" TableName="Schools" PropertyName="GLCustomerId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Cellphone" TableName="Schools" PropertyName="Cellphone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Telephone" TableName="Schools" PropertyName="Telephone" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Schools" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address1" TableName="Schools" PropertyName="Address1" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Address2" TableName="Schools" PropertyName="Address2" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMTPServer" TableName="Schools" PropertyName="SMTPServer" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="SMSGateway" TableName="Schools" PropertyName="SMSGateway" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Schools" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Logo" TableName="Schools" PropertyName="Logo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Slogan" TableName="Schools" PropertyName="Slogan" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Schools" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
    </Methods>
  </ClassModel>
  <ClassModel ClassName="TeacherDAC" IsUpdated="false" GenerateXmlComments="true" UseDefaultComments="true" XmlComment="Teachers data access component. Manages CRUD operations for the Teachers table." ProductName="SBiSchoolWeb.Data" Body="&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Inserts a new row in the Teachers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;teacher&quot;&gt;A Teacher object.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;An updated Teacher object.&lt;/returns&gt;&#xD;&#xA;		public Teacher Create(Teacher teacher)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;INSERT INTO dbo.Teachers ([Name], [IDNo], [TSCNo], [Position], [Email], [Status], [DateJoined], [DateLeft], [IsLeft], [HighestQualification], [IsDeleted]) &quot; +&#xD;&#xA;				&quot;VALUES(@Name, @IDNo, @TSCNo, @Position, @Email, @Status, @DateJoined, @DateLeft, @IsLeft, @HighestQualification, @IsDeleted); SELECT SCOPE_IDENTITY();&quot; ; &#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Name&quot;, DbType.String, teacher.Name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IDNo&quot;, DbType.String, teacher.IDNo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@TSCNo&quot;, DbType.String, teacher.TSCNo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Position&quot;, DbType.String, teacher.Position);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Email&quot;, DbType.String, teacher.Email);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Status&quot;, DbType.String, teacher.Status);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@DateJoined&quot;, DbType.DateTime, teacher.DateJoined);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@DateLeft&quot;, DbType.DateTime, teacher.DateLeft);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsLeft&quot;, DbType.Boolean, teacher.IsLeft);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@HighestQualification&quot;, DbType.String, teacher.HighestQualification);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, teacher.IsDeleted);&#xD;&#xA;&#xD;&#xA;				// Get the primary key value.&#xD;&#xA;				teacher.Id = Convert.ToInt32(db.ExecuteScalar(cmd));&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return teacher;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Updates an existing row in the Teachers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;teacher&quot;&gt;A Teacher entity object.&lt;/param&gt;&#xD;&#xA;		public void UpdateById(Teacher teacher)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;UPDATE dbo.Teachers &quot; +&#xD;&#xA;				&quot;SET &quot; +&#xD;&#xA;					&quot;[Name]=@Name, &quot; +&#xD;&#xA;					&quot;[IDNo]=@IDNo, &quot; +&#xD;&#xA;					&quot;[TSCNo]=@TSCNo, &quot; +&#xD;&#xA;					&quot;[Position]=@Position, &quot; +&#xD;&#xA;					&quot;[Email]=@Email, &quot; +&#xD;&#xA;					&quot;[Status]=@Status, &quot; +&#xD;&#xA;					&quot;[DateJoined]=@DateJoined, &quot; +&#xD;&#xA;					&quot;[DateLeft]=@DateLeft, &quot; +&#xD;&#xA;					&quot;[IsLeft]=@IsLeft, &quot; +&#xD;&#xA;					&quot;[HighestQualification]=@HighestQualification, &quot; +&#xD;&#xA;					&quot;[IsDeleted]=@IsDeleted &quot; +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Name&quot;, DbType.String, teacher.Name);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IDNo&quot;, DbType.String, teacher.IDNo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@TSCNo&quot;, DbType.String, teacher.TSCNo);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Position&quot;, DbType.String, teacher.Position);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Email&quot;, DbType.String, teacher.Email);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Status&quot;, DbType.String, teacher.Status);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@DateJoined&quot;, DbType.DateTime, teacher.DateJoined);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@DateLeft&quot;, DbType.DateTime, teacher.DateLeft);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsLeft&quot;, DbType.Boolean, teacher.IsLeft);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@HighestQualification&quot;, DbType.String, teacher.HighestQualification);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, teacher.IsDeleted);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, teacher.Id);&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally deletes one or more rows in the Teachers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		public void DeleteById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &quot;DELETE dbo.Teachers &quot; +&#xD;&#xA;										 &quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Returns a row from the Teachers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A Id value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A Teacher object with data populated from the database.&lt;/returns&gt;&#xD;&#xA;		public Teacher SelectById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [Name], [IDNo], [TSCNo], [Position], [Email], [Status], [DateJoined], [DateLeft]&quot;+&#xD;&#xA;						&quot;, [IsLeft], [HighestQualification], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.Teachers  &quot;  +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			Teacher teacher = null;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					if (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new Teacher&#xD;&#xA;						teacher = new Teacher();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						teacher.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						teacher.Name = base.GetDataValue&lt;string&gt;(dr, &quot;Name&quot;);&#xD;&#xA;						teacher.IDNo = base.GetDataValue&lt;string&gt;(dr, &quot;IDNo&quot;);&#xD;&#xA;						teacher.TSCNo = base.GetDataValue&lt;string&gt;(dr, &quot;TSCNo&quot;);&#xD;&#xA;						teacher.Position = base.GetDataValue&lt;string&gt;(dr, &quot;Position&quot;);&#xD;&#xA;						teacher.Email = base.GetDataValue&lt;string&gt;(dr, &quot;Email&quot;);&#xD;&#xA;						teacher.Status = base.GetDataValue&lt;string&gt;(dr, &quot;Status&quot;);&#xD;&#xA;						teacher.DateJoined = base.GetDataValue&lt;DateTime&gt;(dr, &quot;DateJoined&quot;);&#xD;&#xA;						teacher.DateLeft = base.GetDataValue&lt;DateTime&gt;(dr, &quot;DateLeft&quot;);&#xD;&#xA;						teacher.IsLeft = base.GetDataValue&lt;bool&gt;(dr, &quot;IsLeft&quot;);&#xD;&#xA;						teacher.HighestQualification = base.GetDataValue&lt;string&gt;(dr, &quot;HighestQualification&quot;);&#xD;&#xA;						teacher.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return teacher;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally retrieves one or more rows from the Teachers table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;returns&gt;A collection of Teacher objects.&lt;/returns&gt;		&#xD;&#xA;		public List&lt;Teacher&gt; Select()&#xD;&#xA;		{&#xD;&#xA;			// WARNING! The following SQL query does not contain a WHERE condition.&#xD;&#xA;			// You are advised to include a WHERE condition to prevent any performance&#xD;&#xA;			// issues when querying large resultsets.&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [Name], [IDNo], [TSCNo], [Position], [Email], [Status], [DateJoined], [DateLeft]&quot;+&#xD;&#xA;						&quot;, [IsLeft], [HighestQualification], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.Teachers &quot;;&#xD;&#xA;&#xD;&#xA;			List&lt;Teacher&gt; result = new List&lt;Teacher&gt;();&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{ &#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					while (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new Teacher&#xD;&#xA;						Teacher teacher = new Teacher();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						teacher.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						teacher.Name = base.GetDataValue&lt;string&gt;(dr, &quot;Name&quot;);&#xD;&#xA;						teacher.IDNo = base.GetDataValue&lt;string&gt;(dr, &quot;IDNo&quot;);&#xD;&#xA;						teacher.TSCNo = base.GetDataValue&lt;string&gt;(dr, &quot;TSCNo&quot;);&#xD;&#xA;						teacher.Position = base.GetDataValue&lt;string&gt;(dr, &quot;Position&quot;);&#xD;&#xA;						teacher.Email = base.GetDataValue&lt;string&gt;(dr, &quot;Email&quot;);&#xD;&#xA;						teacher.Status = base.GetDataValue&lt;string&gt;(dr, &quot;Status&quot;);&#xD;&#xA;						teacher.DateJoined = base.GetDataValue&lt;DateTime&gt;(dr, &quot;DateJoined&quot;);&#xD;&#xA;						teacher.DateLeft = base.GetDataValue&lt;DateTime&gt;(dr, &quot;DateLeft&quot;);&#xD;&#xA;						teacher.IsLeft = base.GetDataValue&lt;bool&gt;(dr, &quot;IsLeft&quot;);&#xD;&#xA;						teacher.HighestQualification = base.GetDataValue&lt;string&gt;(dr, &quot;HighestQualification&quot;);&#xD;&#xA;						teacher.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;&#xD;&#xA;						// Add to List.&#xD;&#xA;						result.Add(teacher);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return result;&#xD;&#xA;		}&#xD;&#xA;">
    <NamespacesToImport />
    <Methods>
      <MethodModel Name="Create" EntityName="Teacher" TableName="Teachers" SchemaName="dbo" TableAlias="A" Type="Insert" IsUpdated="false" XmlComment="Inserts a new row in the Teachers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Teachers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IDNo" TableName="Teachers" PropertyName="IDNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TSCNo" TableName="Teachers" PropertyName="TSCNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Position" TableName="Teachers" PropertyName="Position" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Teachers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Teachers" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateJoined" TableName="Teachers" PropertyName="DateJoined" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateLeft" TableName="Teachers" PropertyName="DateLeft" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsLeft" TableName="Teachers" PropertyName="IsLeft" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="HighestQualification" TableName="Teachers" PropertyName="HighestQualification" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Teachers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="UpdateById" EntityName="Teacher" TableName="Teachers" SchemaName="dbo" TableAlias="A" Type="UpdateObject" IsUpdated="false" XmlComment="Updates an existing row in the Teachers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Teachers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IDNo" TableName="Teachers" PropertyName="IDNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TSCNo" TableName="Teachers" PropertyName="TSCNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Position" TableName="Teachers" PropertyName="Position" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Teachers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Teachers" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateJoined" TableName="Teachers" PropertyName="DateJoined" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateLeft" TableName="Teachers" PropertyName="DateLeft" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsLeft" TableName="Teachers" PropertyName="IsLeft" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="HighestQualification" TableName="Teachers" PropertyName="HighestQualification" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Teachers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="DeleteById" EntityName="Teacher" TableName="Teachers" SchemaName="dbo" TableAlias="A" Type="Delete" IsUpdated="false" XmlComment="Conditionally deletes one or more rows in the Teachers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns />
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectById" EntityName="Teacher" TableName="Teachers" SchemaName="dbo" TableAlias="A" Type="SelectObject" IsUpdated="false" XmlComment="Returns a row from the Teachers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Teachers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IDNo" TableName="Teachers" PropertyName="IDNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TSCNo" TableName="Teachers" PropertyName="TSCNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Position" TableName="Teachers" PropertyName="Position" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Teachers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Teachers" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateJoined" TableName="Teachers" PropertyName="DateJoined" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateLeft" TableName="Teachers" PropertyName="DateLeft" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsLeft" TableName="Teachers" PropertyName="IsLeft" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="HighestQualification" TableName="Teachers" PropertyName="HighestQualification" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Teachers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="Select" EntityName="Teacher" TableName="Teachers" SchemaName="dbo" TableAlias="A" Type="Select" IsUpdated="false" XmlComment="Conditionally retrieves one or more rows from the Teachers table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="Teachers" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Name" TableName="Teachers" PropertyName="Name" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IDNo" TableName="Teachers" PropertyName="IDNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TSCNo" TableName="Teachers" PropertyName="TSCNo" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Position" TableName="Teachers" PropertyName="Position" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Email" TableName="Teachers" PropertyName="Email" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="Teachers" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateJoined" TableName="Teachers" PropertyName="DateJoined" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="DateLeft" TableName="Teachers" PropertyName="DateLeft" DataType="DateTime" DbType="DateTime" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsLeft" TableName="Teachers" PropertyName="IsLeft" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="HighestQualification" TableName="Teachers" PropertyName="HighestQualification" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="Teachers" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
    </Methods>
  </ClassModel>
  <ClassModel ClassName="SchoolClassDAC" IsUpdated="false" GenerateXmlComments="true" UseDefaultComments="true" XmlComment="SchoolClasses data access component. Manages CRUD operations for the SchoolClasses table." ProductName="SBiSchoolWeb.Data" Body="&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Inserts a new row in the SchoolClasses table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;schoolClass&quot;&gt;A SchoolClass object.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;An updated SchoolClass object.&lt;/returns&gt;&#xD;&#xA;		public SchoolClass Create(SchoolClass schoolClass)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;INSERT INTO dbo.SchoolClasses ([ShortCode], [ClassName], [ProgrammeYearId], [NoOfSubjects], [TeacherId], [CurrentYrLevel], [NextYrLevel], [Remarks], [Status], [IsDeleted]) &quot; +&#xD;&#xA;				&quot;VALUES(@ShortCode, @ClassName, @ProgrammeYearId, @NoOfSubjects, @TeacherId, @CurrentYrLevel, @NextYrLevel, @Remarks, @Status, @IsDeleted); SELECT SCOPE_IDENTITY();&quot; ; &#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@ShortCode&quot;, DbType.String, schoolClass.ShortCode);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@ClassName&quot;, DbType.String, schoolClass.ClassName);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@ProgrammeYearId&quot;, DbType.Int32, schoolClass.ProgrammeYearId);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NoOfSubjects&quot;, DbType.Int32, schoolClass.NoOfSubjects);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@TeacherId&quot;, DbType.Int32, schoolClass.TeacherId);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@CurrentYrLevel&quot;, DbType.Int32, schoolClass.CurrentYrLevel);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NextYrLevel&quot;, DbType.Int32, schoolClass.NextYrLevel);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Remarks&quot;, DbType.String, schoolClass.Remarks);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Status&quot;, DbType.String, schoolClass.Status);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, schoolClass.IsDeleted);&#xD;&#xA;&#xD;&#xA;				// Get the primary key value.&#xD;&#xA;				schoolClass.Id = Convert.ToInt32(db.ExecuteScalar(cmd));&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return schoolClass;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Updates an existing row in the SchoolClasses table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;schoolClass&quot;&gt;A SchoolClass entity object.&lt;/param&gt;&#xD;&#xA;		public void UpdateById(SchoolClass schoolClass)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;UPDATE dbo.SchoolClasses &quot; +&#xD;&#xA;				&quot;SET &quot; +&#xD;&#xA;					&quot;[ShortCode]=@ShortCode, &quot; +&#xD;&#xA;					&quot;[ClassName]=@ClassName, &quot; +&#xD;&#xA;					&quot;[ProgrammeYearId]=@ProgrammeYearId, &quot; +&#xD;&#xA;					&quot;[NoOfSubjects]=@NoOfSubjects, &quot; +&#xD;&#xA;					&quot;[TeacherId]=@TeacherId, &quot; +&#xD;&#xA;					&quot;[CurrentYrLevel]=@CurrentYrLevel, &quot; +&#xD;&#xA;					&quot;[NextYrLevel]=@NextYrLevel, &quot; +&#xD;&#xA;					&quot;[Remarks]=@Remarks, &quot; +&#xD;&#xA;					&quot;[Status]=@Status, &quot; +&#xD;&#xA;					&quot;[IsDeleted]=@IsDeleted &quot; +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@ShortCode&quot;, DbType.String, schoolClass.ShortCode);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@ClassName&quot;, DbType.String, schoolClass.ClassName);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@ProgrammeYearId&quot;, DbType.Int32, schoolClass.ProgrammeYearId);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NoOfSubjects&quot;, DbType.Int32, schoolClass.NoOfSubjects);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@TeacherId&quot;, DbType.Int32, schoolClass.TeacherId);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@CurrentYrLevel&quot;, DbType.Int32, schoolClass.CurrentYrLevel);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@NextYrLevel&quot;, DbType.Int32, schoolClass.NextYrLevel);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Remarks&quot;, DbType.String, schoolClass.Remarks);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Status&quot;, DbType.String, schoolClass.Status);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@IsDeleted&quot;, DbType.Boolean, schoolClass.IsDeleted);&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, schoolClass.Id);&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally deletes one or more rows in the SchoolClasses table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A id value.&lt;/param&gt;&#xD;&#xA;		public void DeleteById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &quot;DELETE dbo.SchoolClasses &quot; +&#xD;&#xA;										 &quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				// Set parameter values.&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;				db.ExecuteNonQuery(cmd);&#xD;&#xA;			}&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Returns a row from the SchoolClasses table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;param name=&quot;id&quot;&gt;A Id value.&lt;/param&gt;&#xD;&#xA;		/// &lt;returns&gt;A SchoolClass object with data populated from the database.&lt;/returns&gt;&#xD;&#xA;		public SchoolClass SelectById(int id)&#xD;&#xA;		{&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [ShortCode], [ClassName], [ProgrammeYearId], [NoOfSubjects], [TeacherId], [CurrentYrLevel]&quot;+&#xD;&#xA;						&quot;, [NextYrLevel], [Remarks], [Status], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.SchoolClasses  &quot;  +&#xD;&#xA;				&quot;WHERE [Id]=@Id &quot;;&#xD;&#xA;&#xD;&#xA;			SchoolClass schoolClass = null;&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{&#xD;&#xA;				db.AddInParameter(cmd, &quot;@Id&quot;, DbType.Int32, id);&#xD;&#xA;&#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					if (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new SchoolClass&#xD;&#xA;						schoolClass = new SchoolClass();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						schoolClass.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						schoolClass.ShortCode = base.GetDataValue&lt;string&gt;(dr, &quot;ShortCode&quot;);&#xD;&#xA;						schoolClass.ClassName = base.GetDataValue&lt;string&gt;(dr, &quot;ClassName&quot;);&#xD;&#xA;						schoolClass.ProgrammeYearId = base.GetDataValue&lt;int&gt;(dr, &quot;ProgrammeYearId&quot;);&#xD;&#xA;						schoolClass.NoOfSubjects = base.GetDataValue&lt;int&gt;(dr, &quot;NoOfSubjects&quot;);&#xD;&#xA;						schoolClass.TeacherId = base.GetDataValue&lt;int&gt;(dr, &quot;TeacherId&quot;);&#xD;&#xA;						schoolClass.CurrentYrLevel = base.GetDataValue&lt;int&gt;(dr, &quot;CurrentYrLevel&quot;);&#xD;&#xA;						schoolClass.NextYrLevel = base.GetDataValue&lt;int&gt;(dr, &quot;NextYrLevel&quot;);&#xD;&#xA;						schoolClass.Remarks = base.GetDataValue&lt;string&gt;(dr, &quot;Remarks&quot;);&#xD;&#xA;						schoolClass.Status = base.GetDataValue&lt;string&gt;(dr, &quot;Status&quot;);&#xD;&#xA;						schoolClass.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return schoolClass;&#xD;&#xA;		}&#xD;&#xA;&#xD;&#xA;		/// &lt;summary&gt;&#xD;&#xA;		/// Conditionally retrieves one or more rows from the SchoolClasses table.&#xD;&#xA;		/// &lt;/summary&gt;&#xD;&#xA;		/// &lt;returns&gt;A collection of SchoolClass objects.&lt;/returns&gt;		&#xD;&#xA;		public List&lt;SchoolClass&gt; Select()&#xD;&#xA;		{&#xD;&#xA;			// WARNING! The following SQL query does not contain a WHERE condition.&#xD;&#xA;			// You are advised to include a WHERE condition to prevent any performance&#xD;&#xA;			// issues when querying large resultsets.&#xD;&#xA;			const string SQL_STATEMENT = &#xD;&#xA;				&quot;SELECT [Id], [ShortCode], [ClassName], [ProgrammeYearId], [NoOfSubjects], [TeacherId], [CurrentYrLevel]&quot;+&#xD;&#xA;						&quot;, [NextYrLevel], [Remarks], [Status], [IsDeleted] &quot; +&#xD;&#xA;				&quot;FROM dbo.SchoolClasses &quot;;&#xD;&#xA;&#xD;&#xA;			List&lt;SchoolClass&gt; result = new List&lt;SchoolClass&gt;();&#xD;&#xA;&#xD;&#xA;			// Connect to database.&#xD;&#xA;			Database db = DatabaseFactory.CreateDatabase(CONNECTION_NAME);&#xD;&#xA;			using (DbCommand cmd = db.GetSqlStringCommand(SQL_STATEMENT))&#xD;&#xA;			{ &#xD;&#xA;				using (IDataReader dr = db.ExecuteReader(cmd))&#xD;&#xA;				{&#xD;&#xA;					while (dr.Read())&#xD;&#xA;					{&#xD;&#xA;						// Create a new SchoolClass&#xD;&#xA;						SchoolClass schoolClass = new SchoolClass();&#xD;&#xA;&#xD;&#xA;						// Read values.&#xD;&#xA;						schoolClass.Id = base.GetDataValue&lt;int&gt;(dr, &quot;Id&quot;);&#xD;&#xA;						schoolClass.ShortCode = base.GetDataValue&lt;string&gt;(dr, &quot;ShortCode&quot;);&#xD;&#xA;						schoolClass.ClassName = base.GetDataValue&lt;string&gt;(dr, &quot;ClassName&quot;);&#xD;&#xA;						schoolClass.ProgrammeYearId = base.GetDataValue&lt;int&gt;(dr, &quot;ProgrammeYearId&quot;);&#xD;&#xA;						schoolClass.NoOfSubjects = base.GetDataValue&lt;int&gt;(dr, &quot;NoOfSubjects&quot;);&#xD;&#xA;						schoolClass.TeacherId = base.GetDataValue&lt;int&gt;(dr, &quot;TeacherId&quot;);&#xD;&#xA;						schoolClass.CurrentYrLevel = base.GetDataValue&lt;int&gt;(dr, &quot;CurrentYrLevel&quot;);&#xD;&#xA;						schoolClass.NextYrLevel = base.GetDataValue&lt;int&gt;(dr, &quot;NextYrLevel&quot;);&#xD;&#xA;						schoolClass.Remarks = base.GetDataValue&lt;string&gt;(dr, &quot;Remarks&quot;);&#xD;&#xA;						schoolClass.Status = base.GetDataValue&lt;string&gt;(dr, &quot;Status&quot;);&#xD;&#xA;						schoolClass.IsDeleted = base.GetDataValue&lt;bool&gt;(dr, &quot;IsDeleted&quot;);&#xD;&#xA;&#xD;&#xA;						// Add to List.&#xD;&#xA;						result.Add(schoolClass);&#xD;&#xA;					}&#xD;&#xA;				}&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;			return result;&#xD;&#xA;		}&#xD;&#xA;">
    <NamespacesToImport />
    <Methods>
      <MethodModel Name="Create" EntityName="SchoolClass" TableName="SchoolClasses" SchemaName="dbo" TableAlias="A" Type="Insert" IsUpdated="false" XmlComment="Inserts a new row in the SchoolClasses table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ShortCode" TableName="SchoolClasses" PropertyName="ShortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ClassName" TableName="SchoolClasses" PropertyName="ClassName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ProgrammeYearId" TableName="SchoolClasses" PropertyName="ProgrammeYearId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NoOfSubjects" TableName="SchoolClasses" PropertyName="NoOfSubjects" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TeacherId" TableName="SchoolClasses" PropertyName="TeacherId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="CurrentYrLevel" TableName="SchoolClasses" PropertyName="CurrentYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NextYrLevel" TableName="SchoolClasses" PropertyName="NextYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Remarks" TableName="SchoolClasses" PropertyName="Remarks" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="SchoolClasses" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="SchoolClasses" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="UpdateById" EntityName="SchoolClass" TableName="SchoolClasses" SchemaName="dbo" TableAlias="A" Type="UpdateObject" IsUpdated="false" XmlComment="Updates an existing row in the SchoolClasses table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ShortCode" TableName="SchoolClasses" PropertyName="ShortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ClassName" TableName="SchoolClasses" PropertyName="ClassName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ProgrammeYearId" TableName="SchoolClasses" PropertyName="ProgrammeYearId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NoOfSubjects" TableName="SchoolClasses" PropertyName="NoOfSubjects" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TeacherId" TableName="SchoolClasses" PropertyName="TeacherId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="CurrentYrLevel" TableName="SchoolClasses" PropertyName="CurrentYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NextYrLevel" TableName="SchoolClasses" PropertyName="NextYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Remarks" TableName="SchoolClasses" PropertyName="Remarks" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="SchoolClasses" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="SchoolClasses" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="DeleteById" EntityName="SchoolClass" TableName="SchoolClasses" SchemaName="dbo" TableAlias="A" Type="Delete" IsUpdated="false" XmlComment="Conditionally deletes one or more rows in the SchoolClasses table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns />
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="SelectById" EntityName="SchoolClass" TableName="SchoolClasses" SchemaName="dbo" TableAlias="A" Type="SelectObject" IsUpdated="false" XmlComment="Returns a row from the SchoolClasses table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ShortCode" TableName="SchoolClasses" PropertyName="ShortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ClassName" TableName="SchoolClasses" PropertyName="ClassName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ProgrammeYearId" TableName="SchoolClasses" PropertyName="ProgrammeYearId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NoOfSubjects" TableName="SchoolClasses" PropertyName="NoOfSubjects" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TeacherId" TableName="SchoolClasses" PropertyName="TeacherId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="CurrentYrLevel" TableName="SchoolClasses" PropertyName="CurrentYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NextYrLevel" TableName="SchoolClasses" PropertyName="NextYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Remarks" TableName="SchoolClasses" PropertyName="Remarks" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="SchoolClasses" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="SchoolClasses" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns>
          <FilterColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" OpenParenthesis="false" ConditionalOperator="None" Operator="Equals" CloseParenthesis="false" IsOptional="false" />
        </FilterColumns>
        <OrderByColumns />
      </MethodModel>
      <MethodModel Name="Select" EntityName="SchoolClass" TableName="SchoolClasses" SchemaName="dbo" TableAlias="A" Type="Select" IsUpdated="false" XmlComment="Conditionally retrieves one or more rows from the SchoolClasses table." GenerateXmlComments="true" UseDefaultComments="true" UseLoadMethod="false" GenerateLoadMethod="false">
        <RelatedTables />
        <Columns>
          <ColumnModel Name="Id" TableName="SchoolClasses" PropertyName="Id" DataType="int" DbType="Int32" IsPrimaryKey="true" IsIdentity="true" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ShortCode" TableName="SchoolClasses" PropertyName="ShortCode" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ClassName" TableName="SchoolClasses" PropertyName="ClassName" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="ProgrammeYearId" TableName="SchoolClasses" PropertyName="ProgrammeYearId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NoOfSubjects" TableName="SchoolClasses" PropertyName="NoOfSubjects" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="TeacherId" TableName="SchoolClasses" PropertyName="TeacherId" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="CurrentYrLevel" TableName="SchoolClasses" PropertyName="CurrentYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="NextYrLevel" TableName="SchoolClasses" PropertyName="NextYrLevel" DataType="int" DbType="Int32" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Remarks" TableName="SchoolClasses" PropertyName="Remarks" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="Status" TableName="SchoolClasses" PropertyName="Status" DataType="string" DbType="String" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
          <ColumnModel Name="IsDeleted" TableName="SchoolClasses" PropertyName="IsDeleted" DataType="bool" DbType="Boolean" IsPrimaryKey="false" IsIdentity="false" IsNullable="false" IsOutput="false" />
        </Columns>
        <FilterColumns />
        <OrderByColumns />
      </MethodModel>
    </Methods>
  </ClassModel>
</ArrayOfClassModel>