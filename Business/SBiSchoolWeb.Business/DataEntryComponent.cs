//====================================================================================================
// Base code generated with Motion: BC Gen (Build 2.2.5049.15162)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by Administrator at SAPSERVER on 06/19/2014 08:15:05 
//====================================================================================================

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using SBiSchoolWeb.Entities;
using SBiSchoolWeb.Data;


namespace SBiSchoolWeb.Business
{
    /// <summary>
    /// DataEntries business component.
    /// </summary>
    public partial class DataEntryComponent
    {
        public List<Customer> GetAllCustomers()
        {
            List<Customer> result = default(List<Customer>);

            // Data access component declarations.
            CustomerDAC customerDAC = new CustomerDAC();

            // Step 1 - Calling Select on CustomerDAC.
            result = customerDAC.Select();
            return result;

        }

        public List<GradingSystem> GetAllGradingSystems()
        {
            List<GradingSystem> result = default(List<GradingSystem>);

            // Data access component declarations.
            GradingSystemDAC gradingSystemDAC = new GradingSystemDAC();

            // Step 1 - Calling Select on GradingSystemDAC.
            result = gradingSystemDAC.Select();
            return result;

        }

        public List<GradingSystemDet> GetAllGradingSystemDetails()
        {
            List<GradingSystemDet> result = default(List<GradingSystemDet>);

            // Data access component declarations.
            GradingSystemDetDAC gradingSystemDetDAC = new GradingSystemDetDAC();

            // Step 1 - Calling Select on GradingSystemDetDAC.
            result = gradingSystemDetDAC.Select();
            return result;

        }

        public List<Attendance> GetAllAttendances()
        {
            List<Attendance> result = default(List<Attendance>);

            // Data access component declarations.
            AttendanceDAC attendanceDAC = new AttendanceDAC();

            // Step 1 - Calling Select on AttendanceDAC.
            result = attendanceDAC.Select();
            return result;

        }

        public List<Room> GetAllRooms()
        {
            List<Room> result = default(List<Room>);

            // Data access component declarations.
            RoomDAC roomDAC = new RoomDAC();

            // Step 1 - Calling Select on RoomDAC.
            result = roomDAC.Select();
            return result;

        }

        public List<Location> GetAllLocations()
        {
            List<Location> result = default(List<Location>);

            // Data access component declarations.
            LocationDAC locationDAC = new LocationDAC();

            // Step 1 - Calling Select on LocationDAC.
            result = locationDAC.Select();
            return result;

        }

        public List<LocationProperty> GetAllLocationProperties()
        {
            List<LocationProperty> result = default(List<LocationProperty>);

            // Data access component declarations.
            LocationPropertyDAC locationPropertyDAC = new LocationPropertyDAC();

            // Step 1 - Calling Select on LocationPropertyDAC.
            result = locationPropertyDAC.Select();
            return result;

        }

        public List<DisciplinaryCategory> GetAllDisciplineCategories()
        {
            List<DisciplinaryCategory> result = default(List<DisciplinaryCategory>);

            // Data access component declarations.
            DisciplinaryCategoryDAC disciplinaryCategoryDAC = new DisciplinaryCategoryDAC();

            // Step 1 - Calling Select on DisciplinaryCategoryDAC.
            result = disciplinaryCategoryDAC.Select();
            return result;

        }

        public List<Report> GetAllReports()
        {
            List<Report> result = default(List<Report>);

            // Data access component declarations.
            ReportDAC reportDAC = new ReportDAC();

            // Step 1 - Calling Select on ReportDAC.
            result = reportDAC.Select();
            return result;

        }

        public List<School> GetAllSchools()
        {
            List<School> result = default(List<School>);

            // Data access component declarations.
            SchoolDAC schoolDAC = new SchoolDAC();

            // Step 1 - Calling Select on SchoolDAC.
            result = schoolDAC.Select();
            return result;

        }

        public List<TimeTable> GetAllTimeTables()
        {
            List<TimeTable> result = default(List<TimeTable>);

            // Data access component declarations.
            TimeTableDAC timeTableDAC = new TimeTableDAC();

            // Step 1 - Calling Select on TimeTableDAC.
            result = timeTableDAC.Select();
            return result;

        }

        public List<TimeTableDet> GetAllTimeTableDetails()
        {
            List<TimeTableDet> result = default(List<TimeTableDet>);

            // Data access component declarations.
            TimeTableDetDAC timeTableDetDAC = new TimeTableDetDAC();

            // Step 1 - Calling Select on TimeTableDetDAC.
            result = timeTableDetDAC.Select();
            return result;

        }

        public List<SmsMessageStore> GetAllSMS()
        {
            List<SmsMessageStore> result = default(List<SmsMessageStore>);

            // Data access component declarations.
            SmsMessageStoreDAC SmsMessageStoreDAC = new SmsMessageStoreDAC();

            // Step 1 - Calling Select on SmsMessageStoreDAC.
            result = SmsMessageStoreDAC.Select();
            return result;

        }
        #region "Employees"
        public List<Employee> GetAllEmployees()
        {
            List<Employee> result = default(List<Employee>);

            // Data access component declarations.
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();

            result = _EmployeeDAC.Select();
            return result;

        }
        public Employee GetEmployeebyEmail(string email)
        {
            Employee result = default(Employee);

            // Data access component declarations.
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();

            result = _EmployeeDAC.SelectByEmail(email);
            return result;
        }
        public Employee CreateEmployee(Employee model)
        {
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();

            Employee _Employee = new Employee();
            _Employee.Email = model.Email;
            _Employee.Surname = model.Surname;
            _Employee.OtherNames = model.OtherNames;
            _Employee.EmpNo = model.EmpNo;
            _Employee.MaritalStatus = model.MaritalStatus;
            _Employee.Gender = model.Gender;
            _Employee.Photo = model.Photo;
            _Employee.DoB = model.DoB;
            _Employee.DoE = model.DoE;
            _Employee.CreatedOn = model.CreatedOn;
            _Employee.DateLeft = model.DateLeft;
            _Employee.TelephoneNo = model.TelephoneNo;
            _Employee.DepartmentId = model.DepartmentId;
            _Employee.EmployerId = model.EmployerId;
            _Employee.BasicComputation = model.BasicComputation;
            _Employee.BasicPay = model.BasicPay;
            _Employee.LeaveBalance = model.LeaveBalance;
            _Employee.PersonalRelief = model.PersonalRelief;
            _Employee.MortgageRelief = model.MortgageRelief;
            _Employee.InsuranceRelief = model.InsuranceRelief;
            _Employee.NSSFNo = model.NSSFNo;
            _Employee.NHIFNo = model.NHIFNo;
            _Employee.IDNo = model.IDNo;
            _Employee.PINNo = model.PINNo;
            _Employee.PayPoint = model.PayPoint;
            _Employee.EmpGroup = model.EmpGroup;
            _Employee.EmpPayroll = model.EmpPayroll;
            _Employee.PaymentMode = model.PaymentMode;
            _Employee.ChequeNo = model.ChequeNo;
            _Employee.BankCode = model.BankCode;
            _Employee.BankAccount = model.BankAccount;
            _Employee.CreatedBy = model.CreatedBy;
            _Employee.PrevEmployer = model.PrevEmployer;
            _Employee.IsActive = model.IsActive;
            _Employee.IsDeleted = model.IsDeleted;

            Employee EmployeeReturned = _EmployeeDAC.Create(_Employee);

            return EmployeeReturned;
        }
        public void DeleteEmployeeById(int Id)
        {
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();
            _EmployeeDAC.DeleteById(Id);
        }
        public Employee GetEmployeebyId(int Id)
        {
            Employee result = default(Employee);

            // Data access component declarations.
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();

            result = _EmployeeDAC.SelectById(Id);
            return result;

        }
        public void UpdateEmployee(Employee _Employee)
        {
            // Data access component declarations.
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();

            _EmployeeDAC.UpdateById(_Employee);
        }
        public void UploadEmployeePhoto(Employee _Employee)
        {
            // Data access component declarations.
            EmployeeDAC _EmployeeDAC = new EmployeeDAC();

            _EmployeeDAC.UploadEmployeePhoto(_Employee);
        }
        #endregion "Employees"
        #region "Employers"
        public List<Employer> GetAllEmployers()
        {
            List<Employer> result = default(List<Employer>);

            // Data access component declarations.
            EmployerDAC _EmployerDAC = new EmployerDAC();

            result = _EmployerDAC.Select();
            return result;

        }
        public Employer CreateEmployer(Employer model)
        {
            EmployerDAC _EmployerDAC = new EmployerDAC();

            Employer _Employer = new Employer();
            _Employer.Name = model.Name;
            _Employer.Email = model.Email;
            _Employer.Telephone = model.Telephone;
            _Employer.Address1 = model.Address1;
            _Employer.Address2 = model.Address2;  
            _Employer.Slogan = model.Slogan;
            _Employer.AuthorizedSignatory = model.AuthorizedSignatory;
            _Employer.PIN = model.PIN;
            _Employer.NHIF = model.NHIF;
            _Employer.NSSF = model.NSSF; 
            _Employer.BankBranchSortCode = model.BankBranchSortCode;
            _Employer.AccountName = model.AccountName;
            _Employer.AccountNo = model.AccountNo;
            _Employer.Logo = model.Logo;
            _Employer.IsActive = model.IsActive;
            _Employer.IsDeleted = model.IsDeleted;
            _Employer.IsDefault = model.IsDefault;

            Employer EmployerReturned = _EmployerDAC.Create(_Employer);

            return EmployerReturned;
        }
        public void DeleteEmployerById(int Id)
        {
            EmployerDAC _EmployerDAC = new EmployerDAC();
            _EmployerDAC.DeleteById(Id);
        }
        public Employer GetEmployerbyId(int Id)
        {
            Employer result = default(Employer);

            // Data access component declarations.
            EmployerDAC _EmployerDAC = new EmployerDAC();

            result = _EmployerDAC.SelectById(Id);
            return result;

        }
        public Employer GetDefaultEmployer()
        {
            Employer result = default(Employer);

            // Data access component declarations.
            EmployerDAC _EmployerDAC = new EmployerDAC();

            result = _EmployerDAC.SelectDefaultEmployer();
            return result;

        }
        public void UpdateEmployer(Employer _Employer)
        {
            // Data access component declarations.
            EmployerDAC _EmployerDAC = new EmployerDAC();

            _EmployerDAC.UpdateById(_Employer);
        }
        public void UploadEmployerLogo(Employer _Employer)
        {
            // Data access component declarations.
            EmployerDAC _EmployerDAC = new EmployerDAC();

            _EmployerDAC.UploadEmployerLogo(_Employer);
        }
        #endregion "Employers"




    }
}