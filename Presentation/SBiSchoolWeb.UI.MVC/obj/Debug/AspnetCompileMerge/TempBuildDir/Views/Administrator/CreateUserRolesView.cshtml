@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Web;
@using System.Web.Mvc;
@using System.Web.Security;
@using DotNetOpenAuth.AspNet;
@using Microsoft.Web.WebPages.OAuth;
@using SBiSchoolWeb.Business;
@using SBiSchoolWeb.Entities;
@using SBiSchoolWeb.UI.MVC.Filters;
@using SBiSchoolWeb.UI.MVC.Models;
@using WebMatrix.WebData;

@model SBiSchoolWeb.Entities.UsersInRoleModel

@{
    ViewBag.Title = "Create User Role";
}

<h2 class="page-title">Create User Role </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>User Roles</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserId)
        </div>
        <div class="editor-field">
            @{
    List<SelectListItem> _users = new List<SelectListItem>();
    foreach (var user in Model._Users)
    {
        _users.Add(new SelectListItem
        {
            Text = user.EmployeeName,
            Value = user.UserId.ToString()
        });
    }
            }

            @Html.DropDownListFor(model => model.UserId, _users,"-- Select Employee --", new { @id = "_cboUsers", @style = "width: 310px;height: 30px;", @autofocus = "autofocus" })
            @Html.ValidationMessageFor(model => model.UserId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RoleId)
        </div>
        <div class="editor-field">
            @{
    List<SelectListItem> _roles = new List<SelectListItem>();
    foreach (var role in Model._Roles)
    {
        _roles.Add(new SelectListItem
             {
                 Text = role.RoleName,
                 Value = role.RoleId.ToString(),
                 Selected = Model.RoleId.Equals(role.RoleId)
             });
    }
            }

            @Html.DropDownListFor(model => model.RoleId, _roles,"-- Select Role --", new { @id = "_cboRoles", @style = "width: 310px;height: 30px;" })
            @Html.ValidationMessageFor(model => model.RoleId)
        </div>


        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}


@*@using (Html.BeginForm("GetUSerRolesPartial", "Administrator"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
      
        
    <div class="editor-label">
        @Html.LabelFor(model => model.UserId)
    </div>
    <div class="editor-field">
        @{
    List<SelectListItem> users = new List<SelectListItem>();
    foreach (var user in Model._Users)
    {
        users.Add(new SelectListItem
        {
            Text = user.EmployeeName,
            Value = user.UserId.ToString()
        });
    }
        }

        @Html.DropDownListFor(model => model.UserId, users, new { @id = "cboUsers", @style = "width: 310px;height: 30px;" })
        @Html.ValidationMessageFor(model => model.UserId)
    </div>

        
    <p>
        <input type="submit" value="Get Roles for this User" />
    </p>
}*@


@*@{ Html.RenderPartial("PartialUserRolesView"); }

@{  Html.RenderAction("GetUSerRolesPartial", new { userid = Model.UserId }); }*@



@*@using (Html.BeginForm("GetUSerRolesPartial", "Administrator"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="editor-label">
        @Html.LabelFor(model => model.UserId)
    </div>
    <div class="editor-field">
        @{
    List<SelectListItem> users = new List<SelectListItem>();
    foreach (var user in Model._Users)
    {
        users.Add(new SelectListItem
        {
            Text = user.EmployeeName,
            Value = user.UserId.ToString()
        });
    }
        }

        @Html.DropDownListFor(model => model.UserId, users, new { @id = "_cboUserRoles", @style = "width: 310px;height: 30px;" })
        @Html.ValidationMessageFor(model => model.UserId)
    </div>
             
    <p>
        <input type="submit" value="_Get _Roles _for _this _User" />
    </p>           

}*@


@*@if(Model._UserRoles != null) {
            <text>
            <h3>Roles for this user </h3>
            <ol>
        @foreach (string s in Model._UserRoles)
        {
            <li>@s</li>   
        }
            </ol>
            </text>
        } *@










@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(document).ready(function () {

            $("#loading").hide();

            $("#progress").hide();

            $.ajaxSetup({ cache: false });

        });
        </script>
 
}









