@model SBiSchoolWeb.Entities.spUser

@{
    ViewBag.Title = "Edit Profile";
}

<h2 class="page-title">Edit Profile</h2>

@using (Html.BeginForm("EditProfile", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id = "edit-profile-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <fieldset>
        <legend>Edit Profile</legend>

        @Html.HiddenFor(model => model.Id);
                
        <article class="col1">
            <div class="pad">

                <ol>

                    <li>
                        @Html.ValidationMessageFor(model => model.Surname)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.OtherNames)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.NationalID)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.Gender)
                    </li>

                </ol>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Surname)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Surname)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.OtherNames)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.OtherNames)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.NationalID)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.NationalID)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Gender)
                </div>
                <div class="editor-field">
                    @{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
         {
             Text = "Male",
             Value = "M"
         });
    listItems.Add(new SelectListItem
         {
             Text = "Female",
             Value = "F",
         });
                    }

                    @Html.DropDownListFor(model => model.Gender, listItems, "-- Select Gender --", new { @id = "cboGender", @style = "width: 310px;height: 30px;" })
                </div>


            </div>
        </article>

        <article class="col1">
            <div class="pad">

                <ol>

                    <li>
                        @Html.ValidationMessageFor(model => model.InformBy)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.Telephone)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.DateOfBirth)
                    </li>

                </ol>

                <div class="editor-label">
                    @Html.LabelFor(model => model.InformBy)
                </div>
                <div class="editor-field">
                    @{
    List<SelectListItem> infmlistItems = new List<SelectListItem>();
    infmlistItems.Add(new SelectListItem
         {
             Text = "SMS",
             Value = "SMS"
         });
    infmlistItems.Add(new SelectListItem
         {
             Text = "EMAIL",
             Value = "EMAIL",
             Selected = true
         });
                    }

                    @Html.DropDownListFor(model => model.InformBy, infmlistItems, "-- Select Inform By--", new { @id = "cboInformBy", @style = "width: 310px;height: 30px;" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Telephone)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.Telephone, new { type = "tel", placeholder = "254717769329" })
                </div>

                @if (Model.DateOfBirth.ToString() == "1/1/0001 12:00:00 AM" || Model.DateOfBirth.ToString() == "1/1/01 12:00:00 AM" || Model.DateOfBirth.ToString() == "01/01/01 12:00:00 AM" || Model.DateOfBirth.ToString() == "01/01/0001 12:00:00 AM" || Model.DateOfBirth.ToString() == "01/01/01 12:00:00 AM" || Model.DateOfBirth.ToString() == "0001-01-01 12:00:00 AM" || Model.DateOfBirth.ToString() == "01-Jan-01 12:00:00 AM")
                {
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateOfBirth)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.DateOfBirth, new { Value = @DateTime.Now.Date.ToString("yyyy-MM-dd"), @class = "datepicker", type = "date" })
                    </div>
                }

                else
                {
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateOfBirth)
                    </div>
                    <div class="editor-field">
                        @{
                    var dateAsString = Model.DateOfBirth; 
            
                            @Html.TextBoxFor(model => model.DateOfBirth, new { Value = dateAsString.ToString("yyyy-MM-dd"), @class = "datepicker", type = "date" })
                        }
                    </div>
                }

            </div>
        </article>

        <p>
            <input type="submit" value="Save" id="btnSubmit" style="float: left; clear: both" />
        </p>

    </fieldset>
    
}


<article class="col4">
    <div class="pad">

        <div class="editor-label">
            @Html.LabelFor(model => model.Photo)
        </div>
        <div class="editor-field">

            @if (Model.Photo != null)
            {               
                <div class="editor-label">
                    <div>
                        @using (Html.BeginForm("EditUserPhoto", "Account", new { id = Model.Id }, FormMethod.Get, new { enctype = "multipart/form-data", id = "change-photo-form" }))
                        { 
                            <div>
                                <a id="btnSubmitChangeUserPhotoForm" style="cursor: pointer;">Change Photo</a>
                            </div>    
                        }
                    </div>

                </div>
                
                <br />
                
                        FileInfo photoInfo = new FileInfo(Path.Combine(Server.MapPath("/Images"), Model.Photo));
                        if (photoInfo.Exists)
                        {
                            string directoryName = Path.GetDirectoryName(Model.Photo);
                            if (directoryName.StartsWith(@"C:\", true, System.Globalization.CultureInfo.InvariantCulture))
                            { 
                <div class="editor-label">
                    <img src="~/Images/defaultphoto.jpg" alt="Logo" width="310" height="100" />
                </div>
                            }
                            else
                            {
                <div class="editor-label">
                    <img src="~/Images/@Model.Photo" alt="Logo" width="310" height="100" />
                </div>
                            }
                        }
                        else
                        {
                <div class="editor-label">
                    <img src="~/Images/defaultphoto.jpg" alt="Photo" width="310" height="100" />
                </div>
                        }
            }

            @if (Model.Photo == null)
            {
                <div class="editor-label">
                    <div>
                        @using (Html.BeginForm("EditUserPhoto", "Account", new { id = Model.Id }, FormMethod.Get, new { enctype = "multipart/form-data", id = "upload-photo-form" }))
                        { 
                            <div>
                                <a id="btnSubmitUploadUserPhotoForm" style="cursor: pointer;">Upload Photo</a>
                            </div>    
                        }
                    </div>

                </div> 
                 
                <br />
                
                <div class="editor-label">
                    <img src="~/Images/defaultphoto.jpg" alt="Photo" width="310" height="100" />
                </div>
                
            }

        </div>

    </div>
</article>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(document).ready(function () {

            $("#progress").hide();

            $.ajaxSetup({ cache: false });

        });

        $("#btnSubmit").on("click", function (e) {

            e.preventDefault();

            $("#progress").removeClass('displaynone');
            $("#progress").addClass('displayblock');
            $("#progress").show();

            $("#edit-profile-form").submit();

        });

        $("#btnSubmitChangeUserPhotoForm").on("click", function (e) {

            e.preventDefault();

            $("#progress").removeClass('displaynone');
            $("#progress").addClass('displayblock');
            $("#progress").show();

            $("#change-photo-form").submit();

        });

        $("#btnSubmitUploadUserPhotoForm").on("click", function (e) {

            e.preventDefault();

            $("#progress").removeClass('displaynone');
            $("#progress").addClass('displayblock');
            $("#progress").show();

            $("#upload-photo-form").submit();

        });

    </script>

}










