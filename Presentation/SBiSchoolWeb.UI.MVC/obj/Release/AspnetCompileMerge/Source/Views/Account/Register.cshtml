@model SBiSchoolWeb.UI.MVC.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}

<hgroup class="title">
    <h2 class="page-title">@ViewBag.Title.</h2>
    <h2 class="page-title">Create a new account.</h2>
</hgroup>


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { enctype = "multipart/form-data", id = "register-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

   
    <fieldset>
        <legend>Registration Form</legend>

        <article class="col1">
            <div class="pad">

                <h5>Login Info</h5>

                <ol>

                    <li>
                        @Html.ValidationMessageFor(model => model.UserName)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.Password)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.ConfirmPassword)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.TermsAccepted)
                    </li>

                </ol>

                <div class="editor-label">
                    @Html.LabelFor(model => model.UserName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.UserName)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Password)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Password)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.ConfirmPassword)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.ConfirmPassword)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.TermsAccepted)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.TermsAccepted)
                </div>

            </div>
        </article>

        <article class="col2">
            <div class="pad">

                <h5>User Data</h5>

                <ol>

                    <li>
                        @Html.ValidationMessageFor(model => model.Surname)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.OtherNames)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.NationalID)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.Gender)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.InformBy)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.Telephone)
                    </li>
                    <li>
                        @Html.ValidationMessageFor(model => model.DateOfBirth)
                    </li>

                </ol>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Surname)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Surname)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.OtherNames)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.OtherNames)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.NationalID)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.NationalID)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Gender)
                </div>
                <div class="editor-field">
                    @{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
         {
             Text = "Male",
             Value = "M"
         });
    listItems.Add(new SelectListItem
         {
             Text = "Female",
             Value = "F",
         });
                    }

                    @Html.DropDownListFor(model => model.Gender, listItems, "-- Select Gender --", new { @id = "cboGender", @style = "width: 310px;height: 30px;" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.InformBy)
                </div>
                <div class="editor-field">
                    @{
    List<SelectListItem> infmlistItems = new List<SelectListItem>();
    infmlistItems.Add(new SelectListItem
         {
             Text = "SMS",
             Value = "SMS"
         });
    infmlistItems.Add(new SelectListItem
         {
             Text = "EMAIL",
             Value = "EMAIL",
             Selected = true
         });
                    }

                    @Html.DropDownListFor(model => model.InformBy, infmlistItems, "-- Select Inform By--", new { @id = "cboInformBy", @style = "width: 310px;height: 30px;" })
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Telephone)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.Telephone, new { type = "tel", placeholder = "254717769329" })
                    @Html.ValidationMessageFor(model => model.Telephone)
                </div>

                @if (Model.DateOfBirth.ToString() == "1/1/0001 12:00:00 AM" || Model.DateOfBirth.ToString() == "1/1/01 12:00:00 AM" || Model.DateOfBirth.ToString() == "01/01/01 12:00:00 AM" || Model.DateOfBirth.ToString() == "01/01/0001 12:00:00 AM" || Model.DateOfBirth.ToString() == "01/01/01 12:00:00 AM" || Model.DateOfBirth.ToString() == "0001-01-01 12:00:00 AM" || Model.DateOfBirth.ToString() == "01-Jan-01 12:00:00 AM")
                {
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateOfBirth)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.DateOfBirth, new { Value = @DateTime.Now.Date.ToString("yyyy-MM-dd"), @class = "datepicker", type = "date" })
                        @Html.ValidationMessageFor(model => model.DateOfBirth)
                    </div>
                }

                else
                {
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateOfBirth)
                    </div>
                    <div class="editor-field">
                        @{
                    var dateAsString = Model.DateOfBirth; 
            
                            @Html.TextBoxFor(model => model.DateOfBirth, new { Value = dateAsString.ToString("yyyy-MM-dd"), @class = "datepicker", type = "date" })
                        }

                        @Html.ValidationMessageFor(model => model.DateOfBirth)
                    </div>
                }

            </div>
        </article>

        <p>
            <input type="submit" value="Register" id="btnSubmitRegisterForm" style="float: left; clear: both" />
        </p>

    </fieldset>
    
     
}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(document).ready(function () {

            $("#progress").hide();

            $.ajaxSetup({ cache: false });

        });

        $("#btnSubmitRegisterForm").on("click", function (e) {

            e.preventDefault();

            $("#register-form").validate()

            if (!$("#register-form").valid()) {
                return false;
            }

            if ($("#register-form").valid()) {

                $("#progress").removeClass('displaynone');
                $("#progress").addClass('displayblock');
                $("#progress").show();

                $("#register-form").submit();
            }

        });

    </script>

}










